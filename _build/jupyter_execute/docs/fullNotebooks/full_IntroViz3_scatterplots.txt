#import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


df_flights = pd.read_csv('/content/nyc_flight_data.csv')

#plot a scaterplot
sns.scatterplot(data=df_flights, x='dep_delay',y='arr_delay')

#scatterplot with labels
sns.scatterplot(data=df_flights, x='dep_delay',y='arr_delay').set(xlabel='Departure delay (minutes)', ylabel='Arrival delay (minutes)')

#save file
plt.savefig("delay_scatterplot.png")

#estimate correlation
df_flights.arr_delay.corr(df_flights.dep_delay)

#take a look at potential variables to compare
df_flights.head(3)

#estimate the correlation between two variables
df_flights.air_time.corr(df_flights.distance)

#Scatterplot
sns.scatterplot(data=df_flights, x='air_time',y='distance')

#let's choose some varibles to look at 
df_flights_pairs = df_flights[["arr_delay","dep_delay","distance","carrier"]] #notice it did not use carrier... why?

#use the pairplot method to look at all combinations of these variables
sns.pairplot(df_flights_pairs)

#Choose some varibles to look at 
df_flights_pairs = df_flights[["air_time","distance","arr_delay"]] #notice it did not use carrier... why?

#use the pairplot method to look at all combinations of these variables
sns.pairplot(df_flights_pairs)

#run a correlation on all combinations of variables in df_flights
corrmat = df_flights.corr()

#plot the results as a heat map
sns.heatmap(corrmat, square=False)

#plot the results as a heat map (this time let's make the figure bigger)
plt.subplots(figsize=(12,9))
sns.heatmap(corrmat, square=False)

df_anscombe = pd.read_json("/content/sample_data/anscombe.json")

df_anscombe.head()

df_anscombe.groupby('Series').mean()

df_anscombe.groupby('Series').std()

sns.scatterplot(data=df_anscombe[(df_anscombe.Series=="I")],x="X",y="Y")

sns.scatterplot(data=df_anscombe[(df_anscombe.Series=="II")],x="X",y="Y")

sns.scatterplot(data=df_anscombe[(df_anscombe.Series=="III")],x="X",y="Y")

sns.scatterplot(data=df_anscombe[(df_anscombe.Series=="IV")],x="X",y="Y")
