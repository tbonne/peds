import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
import seaborn as sns

#Simulate a cluster
cluster1_x = np.random.normal(0,10,size=1000)
cluster1_y = np.random.normal(0,10,size=1000)

#put it into a dataframe
d = {'x':cluster1_x,'y':cluster1_y,'cluster':'1'}
df_clusters = pd.DataFrame(data=d)

#take a look
df_clusters.head(5)

#scatter plot
sns.scatterplot(data=df_clusters, x="x", y="y",hue='cluster')


#Simulate a cluster
cluster2_x = np.random.uniform(5,10,size=1000)
cluster2_y = np.random.uniform(5,10,size=1000)

#put it into a dataframe
d2 = {'x':cluster2_x,'y':cluster2_y,'cluster':'2'}
df_cluster2 = pd.DataFrame(data=d2)

#add it to the previous cluster
df_clusters = df_clusters.append(df_cluster2)

#take a look
df_clusters.head(5)

sns.scatterplot(data=df_clusters, x="x", y="y",hue='cluster')

#randomly shuffle the rows around
df_clusters = df_clusters.sample(frac=1)

#remove the cluster column (i.e., no labels!)
df_clusters = df_clusters.drop('cluster', axis=1)

#save your dataframe to a csv file
df_clusters.to_csv("MyTeamName_clusters.csv", index=False)


#use read_csv to load the data (Hint: right click on the file you want, then copy path)
df_other = pd.read_csv('/content/MyTeamName_clusters.csv') 

#take a look
df_other

#scatter plots


# k-means clustering (elbow method)

# Hdbscan clustering (min number of points in a cluster)
