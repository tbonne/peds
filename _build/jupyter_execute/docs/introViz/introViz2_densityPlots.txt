# import the libraries we will use
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


#choose a mean and a standard deviation
my_mean= 2
my_std = 10

#sample data from a normal distribution
my_made_up_data = np.random.normal(my_mean, my_std, size=1000)

#take a look the data you made
my_made_up_data[0:10]

#plot a histogram
sns.displot(my_made_up_data)

#get the mean
estimated_mean = my_made_up_data.mean()

#get the sd
estimated_std = my_made_up_data.std()

#print 
print("The estimated mean is ",estimated_mean)
print("The estimated mean is ",estimated_std)

print("The true mean is {0} compared to the estimated mean {1}".format(my_mean, estimated_mean.round(3)))
print("The true sd is {0} compared to the estimated sd {1}".format(my_std, estimated_std.round(3)))


#plot the histogram again and place the estimated mean on the plot
sns.displot(my_made_up_data)
plt.axvline(estimated_mean,color="black")
plt.axvline(my_mean,color="red")

#save a plot
plt.savefig('hist_compare.png')

#bring in the nyc flight data
df_flights = pd.read_csv('/content/nyc_flight_data.csv')

#fit a histogram of departure delay times
sns.displot(df_flights,x='arr_delay', binwidth=10)

#plot one with both histogram and density 
sns.displot(df_flights, x='arr_delay', kde=True)

#plot just density
sns.displot(df_flights, x='arr_delay', kind='kde')

#Create a density plot for each carrier
sns.displot(df_flights, x='arr_delay', kind='kde', hue='carrier', fill=False).set(xlabel='Arrival delay')
plt.savefig('overlapDens.png', dpi=600)

#plot a violin plot
sns.violinplot(data=df_flights, x='carrier',y='arr_delay')
plt.axhline(0, ls='--') #add a dashed line at zero

#save the figure
plt.savefig('output_figure.png',dpi=600)

sns.barplot(data=df_flights, x="carrier", y="arr_delay" ).set(ylabel='Arrival delay') #change the y-axis lable
plt.axhline(0, ls='--') #add a dashed line at zero

#save the figure
plt.savefig("bar_test.png")

#density plot
sns.displot(?, x='?', kind='kde', hue='?', fill=?)

#plot a violin plot
sns.violinplot(data=?, x='?',y='?')
plt.axhline(0, ls='--') #add a dashed line at zero

#bar plot
sns.barplot(data=?, x="?", y="?" )

df_flights['day'] = ?.?.between(?,?) 

#density plot
?

#plot a violin plot
?

#bar plot
?
